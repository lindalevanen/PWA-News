{"version":3,"sources":["components/common/Header.js","components/BaseLayout/index.js","NewsService.js","components/utils.js","components/NewsItem/index.js","components/common/Loader.js","components/NewsList/index.js","routes.js","serviceWorker.js","index.js"],"names":["Header","className","BaseLayout","props","children","ITEM_LIMIT","ARTICLES_URL","ARTICLE_DETAILS_URL","CORS_PROXY","loadMoreArticles","currentAmount","firstPostTime","additionalParams","fetch","concat","then","response","status","json","res","console","log","results","catch","err","error","fixTagDomains","rootEl","tag","srcAttrName","tags","getElementsByTagName","i","length","src","getAttribute","setAttribute","NewsItem","state","article","undefined","id","this","match","params","articleId","replace","fixedHTML","html","tempDiv","document","createElement","innerHTML","fixHTMLDomains","body","setState","date","Date","publish_date","parsedDate","getDate","getMonth","getFullYear","parsedTime","getHours","getMinutes","title","deck","image","original","alt","dangerouslySetInnerHTML","__html","React","Component","override","css","Loader","loading","sizeUnit","size","color","NewsLine","item","to","screen_tiny","NewsList","loadMore","firstPostPubDate","items","trim","amount","prevState","firstPatchReady","map","key","onClick","Routes","process","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","href","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3ae3d86f.chunk.js","sourcesContent":["import React from 'react'\nimport './header.scss'\n\nexport const Header = () => (\n  <div className='header-wrapper'>\n    <div className=\"header\">\n      <span className=\"logo\">G4M3R N3W5</span>\n    </div>\n    <div className='padder' />\n  </div>\n)","import React from 'react'\n\nimport { Header } from '../common/Header'\nimport './index.scss'\n\nconst BaseLayout = (props) => (\n  <div className='base-wrapper'>\n    <Header />\n    <div className='content'>\n      {props.children}\n    </div>\n  </div>\n)\n\nexport default BaseLayout","/**\n * The articles are fetched from the Gamespot API https://www.gamespot.com/api/documentation#toc-0-4\n */\n\nexport const ITEM_LIMIT = 10\n\nconst ARTICLES_URL = (\n  'https://www.gamespot.com/api/articles/' +\n  '?api_key=ac0502dc50b611ff44da3ee2590724945af3e305' +\n  '&format=json' +\n  '&sort=publish_date:desc' +\n  '&limit=' + ITEM_LIMIT\n)\n\nconst ARTICLE_DETAILS_URL = (\n  'https://www.gamespot.com/api/articles/' +\n  '?api_key=ac0502dc50b611ff44da3ee2590724945af3e305' +\n  '&format=json' +\n  '&filter=id::id'\n)\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\"\n\nexport const getArticles = () => {\n  return fetch(CORS_PROXY + ARTICLES_URL)\n    .then(response => {\n      if(response.status === 200) {\n        return response.json()\n      }\n    })\n    .then(res => {\n      console.log(\"Loaded news: \", res.results)\n      return res.results\n    })\n    .catch(err => {\n      console.error(err)\n    })\n}\n\nexport const loadMoreArticles = (currentAmount, firstPostTime) => {\n  const additionalParams = (\n    `&filter=publish_date:1970-01-01T00:00:00|${firstPostTime}` +\n    `&offset=${currentAmount}`\n  )\n  return (\n    fetch(CORS_PROXY + ARTICLES_URL.concat(additionalParams))\n      .then(response => {\n        if(response.status === 200) {\n          return response.json()\n        }\n      })\n      .then(res => {\n        console.log(\"Loaded more: \", res.results)\n        return res.results\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  )\n}\n\nexport const getArticleDetails = (id) => {\n  return fetch(CORS_PROXY + ARTICLE_DETAILS_URL.replace(':id', id))\n  .then(response => {\n    if(response.status === 200) {\n      return response.json()\n    }\n  })\n  .then(res => {\n    console.log(\"Loaded details: \", res.results[0])\n    return res.results[0]\n  })\n  .catch(err => {\n    console.error(err)\n  })\n}","const API_DOMAIN = 'https://www.gamespot.com'\n\n/* \n  Converts html's <a> and <iframe>-tag sources from relative to absolute.\n  Gamespot gives a lot of the sources relative to their domain ('/videos/12345')\n  Change those to be under the Gamespot API ('https://www.gamespot.com/videos/12345')\n*/\n\nexport const fixHTMLDomains = (html) => {\n  var tempDiv = document.createElement('div');\n  tempDiv.innerHTML = html;\n  fixTagDomains(tempDiv, 'a', 'href')\n  fixTagDomains(tempDiv, 'iframe', 'src')\n\n  return tempDiv.innerHTML\n}\n\nconst fixTagDomains = (rootEl, tag, srcAttrName) => {\n  const tags = rootEl.getElementsByTagName(tag)\n  for (let i = 0; i < tags.length; i++) {\n    const src = tags[i].getAttribute(srcAttrName)\n    if(src[0] === '/') { // Relative domain, change it\n      tags[i].setAttribute(srcAttrName, API_DOMAIN  + src)\n    }\n  }\n}","import React from 'react';\nimport './index.scss'\n\nimport { getArticleDetails } from '../../NewsService.js'\nimport { fixHTMLDomains } from '../utils.js'\n\nclass NewsItem extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      article: undefined,\n    }\n  }\n\n  componentDidMount() {\n    getArticleDetails(this.props.match.params.articleId).then(res => {\n      if(res) {\n        const fixedHTML = fixHTMLDomains(res.body)\n        this.setState({article: {...res, body: fixedHTML}})\n      }\n    })\n  }\n\n  render() {\n    const { article } = this.state\n    const date = new Date(article && article.publish_date)\n    const parsedDate = `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`\n    const parsedTime = `${date.getHours()}.${date.getMinutes()}`\n  \n    return (\n      <>\n        {article && (\n          <div className=\"news-wrapper\">\n            <div className=\"title\">{article.title}</div>\n            <div className=\"description\">{article.deck}</div>\n            <div className=\"date\">\n                <span>{parsedDate}</span>\n                <span>{parsedTime}</span>\n            </div>\n            <img src={article.image.original} className=\"thumbnail\" alt=\"thumbnail\" />\n            <div dangerouslySetInnerHTML={{__html: article.body}}/>\n          </div>\n        )}\n      </>\n    )\n  }\n};\n\nexport default NewsItem;\n","import React from 'react'\nimport { css } from '@emotion/core';\nimport { PacmanLoader } from 'react-spinners';\nimport './loader.scss'\n\nconst override = css`\n    display: block;\n    margin: 80px auto;\n    width: 110px;\n`;\n\nconst Loader = ({loading}) => (\n  loading ? (\n    <div className='loader-wrapper'>\n      <PacmanLoader\n        css={override}\n        sizeUnit={\"px\"}\n        size={25}\n        color={'#2993bb'}\n        loading={true}\n      />\n    </div>\n  ) : null\n)\n\nexport default Loader","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Loader from '../common/Loader'\n\nimport './index.scss'\n\nimport { getArticles, loadMoreArticles, ITEM_LIMIT } from '../../NewsService.js'\n\nconst NewsLine = ({ item }) => {\n  const date = new Date(item.publish_date)\n  const parsedDate = `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`\n  const parsedTime = `${date.getHours()}.${date.getMinutes()}`\n  \n  return (\n    <Link to={`/${item.id}`} className='news-item'>\n      <div className=\"line-content\">\n        <span>{item.title}</span>\n        <div className=\"date\">\n          <span>{parsedDate} </span>\n          <span>{parsedTime}</span>\n        </div>\n      </div>\n      <div className=\"image-container\">\n        <img src={item.image.screen_tiny} className=\"thumbnail\" alt=\"thumbnail\" />\n      </div>\n    </Link>\n  )\n}\n\nclass NewsList extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      items: [],\n      amount: ITEM_LIMIT,\n      loading: false,\n      firstPatchReady: false\n    }\n  }\n\n  componentDidMount() {\n    this.setState({loading: true})\n    getArticles().then(res => {\n      if(res) {\n        this.setState({ items: res, loading: false, firstPatchReady: true })\n      }\n    })\n  }\n\n  loadMore = () => {\n    this.setState({loading: true})\n    const firstPostPubDate = this.state.items[0].publish_date.trim().replace(' ', 'T')\n    loadMoreArticles(this.state.amount, firstPostPubDate).then(res => {\n      if(res) {\n        this.setState(prevState => ({\n          items: prevState.items.concat(res),\n          amount: prevState.amount + ITEM_LIMIT,\n          loading: false\n        }))  \n      }\n    })\n  }\n\n  render() {\n    const { items } = this.state\n\n    return (\n      <>\n        <Loader loading={this.state.loading} />\n        <div className='news-list'>\n          {items.map(item => (\n            <NewsLine item={item} key={item.id} />\n          ))}\n          {this.state.firstPatchReady && (\n            <button \n              className='load-more-button'\n              onClick={() => !this.state.loading && this.loadMore()}>\n              Load more\n            </button>\n          )}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default NewsList;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport BaseLayout from './components/BaseLayout'\nimport NewsItem from './components/NewsItem'\nimport NewsList from './components/NewsList'\nimport './index.scss';\n\nclass Routes extends React.Component {\n  render() {\n    console.log(\"NODE ENVIIIIIIII\")\n    console.log(process.env.NODE_ENV)\n\n    return (\n      <Router>\n        <BaseLayout>\n          <Switch>\n            <Route path=\"/:articleId\" component={NewsItem} />\n            <Route path=\"/\" component={NewsList} />\n          </Switch>\n\n        </BaseLayout>\n      </Router>\n    )\n  }\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Routes from './routes.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}